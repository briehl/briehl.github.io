{"version":3,"sources":["css/Social.module.css","media/logo.svg","components/navbar/Branding.js","components/navbar/NavBar.js","components/Home.js","components/Contact.js","components/portfolio/PortfolioCard.js","components/portfolio/CardModal.js","components/portfolio/Portfolio.js","components/Projects.js","components/Resume.js","App.js","registerServiceWorker.js","index.js","css/Portfolio.module.css","css/Navbar.module.css"],"names":["module","exports","Branding","className","styles","navbarBranding","targets","targetLabels","initBgR","initBgG","initBgB","initTextR","initTextG","initTextB","NavBar","props","state","opacity","bgR","bgG","bgB","textR","textG","textB","selectedIdx","window","addEventListener","this","handleScroll","bind","removeEventListener","e","scrollTop","scrollY","percentDown","invPercentDown","r","g","b","Math","min","visibleElems","map","target","element","offset","rect","getBoundingClientRect","top","innerHeight","bottom","isInView","document","querySelector","i","length","setState","borderColor","selected","href","onClick","navbarTab","style","label","preventDefault","currentTarget","getAttribute","scrollIntoView","behavior","block","inline","newBgColor","textColor","newTextColor","navbarContainer","backgroundColor","color","marginLeft","navbarTabList","idx","tabProps","key","handleTabClick","NavTab","React","Component","Home","id","textAlign","contacts","icon","link","name","Contact","contactContainer","contact","SocialIcon","socialIcon","PortfolioCard","zoomed","toggleFn","bgImage","bgImageStyle","background","backgroundRepeat","backgroundSize","portfolioCardContainer","toggleZoom","portfolioCardHead","portfolioCardTitle","portfolioCardDate","startDate","endDate","portfolioCardCopy","blurb","CardModal","didMount","setTimeout","modalBg","projectInfo","visibleClass","visible","modalBackdrop","modalBody","children","projectId","onClose","Portfolio","toggleModal","console","log","showModal","projectMap","projects","forEach","project","projectCards","portfolio","Projects","Resume","App","basename","process","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","getElementById","URL","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.13502ad9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactContainer\":\"Social_contactContainer__oaES_\",\"socialIcon\":\"Social_socialIcon__MUo96\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport styles from '../../css/Navbar.module.css';\n\n/**\n * The left-side branding bit of the navbar. Should have my name, maybe a little icon,\n * something else professional, and flashy, yet subdued.\n *\n * Right now, just Digital Dissonance.\n */\nexport function Branding() {\n    return (\n        <div className={styles.navbarBranding}>\n            <b>Bill Riehl</b>\n        </div>\n    );\n}\n\nexport function SocialLinks() {\n    return (\n        <div className={styles.socialLinks}>\n            <a href=\"https://github.com/briehl\"><span className=\"fab fa-2x fa-github\"></span></a>\n            <a href=\"https://www.linkedin.com/in/briehl/\"><span className=\"fab fa-2x fa-linkedin\"></span></a>\n        </div>\n    );\n}","import React from 'react';\nimport styles from '../../css/Navbar.module.css';\nimport PropTypes from 'prop-types';\nimport { Branding, SocialLinks } from './Branding';\n\nconst targets = ['#home', '#projects', '#resume', '#contact'],\n  targetLabels = ['Home', 'Projects', 'Resume', 'Contact'],\n  initBgR = 174,\n  initBgG = 231,\n  initBgB = 228,\n  initTextR = 0,\n  initTextG = 0,\n  initTextB = 0;  // the final text colors == initBg*\n\n/**\n * This navbar changes its color while scrolling. It gradually fades to black, all Metallica style.\n */\nexport default class NavBar extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      opacity: 1,\n      bgR: initBgR,\n      bgG: initBgG,\n      bgB: initBgB,\n      textR: initTextR,\n      textG: initTextG,\n      textB: initTextB,\n      selectedIdx: 0\n    }\n  }\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll.bind(this))\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll.bind(this))\n  }\n\n  /**\n   * Scrolling does a few things.\n   * 1. Changes text and background color. Between the top of the page and some limit, the color\n   *   of text and bg fade from one thing to another. Text goes from black -> bluish, and\n   *   background color goes from bluish to black. This updates the state.\n   * 2. Detect what element is most in view and change the selected nav item based on that.\n   * @param {ScrollEvent} e\n   */\n  handleScroll(e) {\n    // figure out the color setup\n    const maxScroll = 550\n    let scrollTop = window.scrollY,\n        percentDown = scrollTop/maxScroll,\n        invPercentDown = 1 - percentDown,\n        r = initBgR * invPercentDown,\n        g = initBgG * invPercentDown,\n        b = initBgB * invPercentDown,\n        textR = Math.min(initBgR, initBgR * percentDown),\n        textG = Math.min(initBgG, initBgG * percentDown),\n        textB = Math.min(initBgB, initBgB * percentDown),\n        opacity = 1 - Math.min(percentDown, 0.2)\n\n    // calculate scroll position\n    let selectedIdx = 0;\n\n    if (scrollTop > 20) {\n      const visibleElems = targets.map(target => isInView(document.querySelector(target), -300));\n      for (let i=visibleElems.length-1; i>0; i--) {\n        if (visibleElems[i]) {\n          selectedIdx = i;\n          break;\n        }\n      }\n    }\n\n    // update the state\n    this.setState((state) => ({\n      opacity: opacity,\n      bgR: r,\n      bgG: g,\n      bgB: b,\n      textR: textR,\n      textG: textG,\n      textB: textB,\n      selectedIdx: selectedIdx\n    }))\n  }\n\n  NavTab(props) {\n    let borderColor = props.selected ? `rgba(${props.textR}, ${props.textG}, ${props.textB}, ${props.selected ? 1 : 0})` : '',\n      tabButton = (\n        <div>\n          <a href={props.target} onClick={props.onClick}>\n            <div className={styles.navbarTab} style={{borderColor: borderColor}}>{props.label}</div>\n          </a>\n        </div>\n      );\n    return tabButton;\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    const target = e.currentTarget.getAttribute('href')\n    const elem = document.querySelector(target)\n    elem.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start',\n      inline: 'nearest'\n    })\n  }\n\n  render() {\n    let newBgColor = `rgba(${this.state.bgR}, ${this.state.bgG}, ${this.state.bgB}, ${this.state.opacity})`;\n    let textColor = {\n      textR: this.state.textR,\n      textG: this.state.textG,\n      textB: this.state.textB\n    };\n    let newTextColor = `rgb(${this.state.textR}, ${this.state.textG}, ${this.state.textB})`;\n    return (\n      <div className={styles.navbarContainer} style={{ backgroundColor: newBgColor, color: newTextColor }}>\n        <Branding />\n        <div style={{marginLeft: \"auto\"}}>\n          <div className={styles.navbarTabList}>\n            {\n              targets.map((target, idx) => {\n                let tabProps = {\n                  key: idx,\n                  label: targetLabels[idx],\n                  target: target,\n                  onClick: this.handleTabClick,\n                  selected: this.state.selectedIdx === idx,\n                  ...textColor\n                };\n                return <this.NavTab {...tabProps}/>\n              })\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction isInView(element, offset) {\n  const rect = element.getBoundingClientRect();\n  return rect.top <= (window.innerHeight + offset) && rect.bottom >= 0;\n}\n\nNavBar.propTypes = {\n  location: PropTypes.object\n}","import React, { Component } from 'react';\nimport logo from '../media/logo.svg';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div id=\"home\">\n        <div className=\"home-section page-section\">\n          <div className=\"home-layout\">\n            <div className=\"home-text\">\n              <h2 style={{textAlign: 'right'}}>Bill Riehl</h2>\n              <div style={{textAlign: 'justify'}}>\n                <div>\n                  This is a website. This is just the splash part. Stuff'll go here, like a picture. Then other things below.\n                </div>\n                <div>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer fringilla non dui tincidunt finibus. Mauris condimentum urna dolor, eu rhoncus ex mattis nec. Curabitur eget sapien congue, dapibus lectus in, luctus dolor. Aenean gravida sodales diam, tempus tempor est congue et. Maecenas sagittis, velit id euismod accumsan, quam arcu efficitur eros, id scelerisque magna felis quis massa. Aenean sit amet nunc et nibh feugiat bibendum. Vestibulum non ullamcorper justo, vitae ullamcorper nulla. Duis iaculis enim sit amet placerat consectetur. Duis commodo semper commodo. Donec cursus, est sed iaculis dignissim, dui risus sollicitudin turpis, vel imperdiet odio ligula et sapien. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In quam mauris, accumsan ut felis gravida, vulputate viverra nibh. Nulla aliquam, orci egestas aliquet commodo, ex neque finibus libero, non efficitur nisi eros dapibus turpis. Donec et tincidunt augue, ullamcorper lobortis ante.\n                </div>\n              </div>\n            </div>\n            <div className=\"home-image\">[ picture goes here ]</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport styles from '../css/Social.module.css';\n\nconst contacts = [{\n  icon: 'fa fa-envelope',\n  link: 'mailto:briehl+home@gmail.com',\n  name: 'email'\n}, {\n  icon: 'fab fa-linkedin',\n  link: 'https://www.linkedin.com/in/briehl',\n  name: 'linkedin'\n}, {\n  icon: 'fab fa-github',\n  link: 'https://www.github.com/briehl',\n  name: 'github'\n}, {\n  icon: 'fab fa-twitter',\n  link: 'https://www.twitter.com/real_riehl',\n  name: 'twitter'\n}];\n\n\nexport default class Contact extends Component {\n  render() {\n    return (\n      <div id=\"contact\" className='page-section'>\n        <h1>Contact</h1>\n        If so inclined, you can contact me through...\n        <div className={styles.contactContainer}>\n          {contacts.map(contact => <SocialIcon {...contact} key={contact.name}/>)}\n        </div>\n      </div>\n    )\n  }\n}\n\n/**\n * Makes a clickable icon with some text beneath it.\n * props:\n *  - icon - string, should be of form \"fa fa-whatever\"\n *  - link - string, address that clicking should send to\n *  - name - name that'll be beneath the icon (Github, Email, etc)\n */\nclass SocialIcon extends Component {\n  render() {\n    return (\n      <div className={styles.socialIcon}>\n        <a href={this.props.link}>\n          <div><span className={`fa-2x ${this.props.icon}`}></span></div>\n          <div>{this.props.name}</div>\n        </a>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport styles from '../../css/Portfolio.module.css';\nimport PropTypes from 'prop-types';\n\nexport default class PortfolioCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            zoomed: false\n        }\n   }\n\n    toggleZoom() {\n        this.setState((state) => ({\n            zoomed: !state.zoomed\n        }))\n        this.props.toggleFn(this.props.id);\n    }\n\n    render() {\n        const bgImage = this.props.bgImage ? process.env.PUBLIC_URL + '/images/' + this.props.bgImage : null;\n        let bgImageStyle = {};\n        if (bgImage) {\n            bgImageStyle = {\n                background: `url(${bgImage})`,\n                backgroundRepeat: 'no-repeat',\n                backgroundSize: 'cover'\n            }\n        }\n        // let bgImageLoc = null,\n        //     bgImage = null;\n        // if (this.props.projectInfo) {\n        //     bgImageLoc = process.env.PUBLIC_URL + '/images/' + this.props.projectInfo.background\n        //     bgImage = bgImageLoc\n        // }\n        // let modalBg = {};\n        // if (bgImage) {\n        //     modalBg = {\n        //         backgroundColor: `url(${bgImage})`,\n        //         // backgroundRepeat: 'no-repeat',\n        //         // backgroundSize: 'cover',\n        //         // opacity: 0.5\n        //     }\n        // }\n        return (\n            <div className={`${styles.portfolioCardContainer} ${this.props.selected ? styles.selected : ''}`} onClick={this.toggleZoom.bind(this)}>\n                <div className={styles.portfolioCardHead} style={bgImageStyle}>\n                    <div className={styles.portfolioCardTitle}>{this.props.name}</div>\n                    <div className={styles.portfolioCardDate}>{this.props.startDate} - {this.props.endDate}</div>\n                </div>\n                <div className={styles.portfolioCardCopy}>{this.props.blurb}</div>\n            </div>\n        )\n    }\n}\n\nPortfolioCard.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    startDate: PropTypes.string,\n    endDate: PropTypes.string,\n    url: PropTypes.string,\n    doi: PropTypes.string,\n    blurb: PropTypes.string.isRequired,\n    photoRoll: PropTypes.array,\n    background: PropTypes.string.isRequired,\n    bgImage: PropTypes.string.isRequired\n}\n","import React, { Component } from 'react';\nimport styles from '../../css/Portfolio.module.css';\nimport PropTypes from 'prop-types';\n\nexport default class CardModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            didMount: false\n        };\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState((state) => ({ didMount: true }))\n        }, 0)\n    }\n\n    render() {\n        let modalBg = {\n        }\n        if (this.props.projectInfo) {\n            modalBg.backgroundColor = this.props.projectInfo.background;\n        }\n\n        const visibleClass = this.state.didMount ? styles.visible : '';\n\n        return (\n            <div className={`${styles.modalBackdrop} ${visibleClass}`} style={modalBg}>\n                <div className={styles.modalBody}>\n                    {this.props.children}\n\n                    <h2>I'm the card modal for {this.props.projectId}!</h2>\n                    <div className=\"footer\">\n                        <button onClick={() => { this.props.onClose(false) } }>\n                            Close\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nCardModal.propTypes = {\n    projectId: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    projectInfo: PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        startDate: PropTypes.string,\n        endDate: PropTypes.string,\n        url: PropTypes.string,\n        doi: PropTypes.string,\n        blurb: PropTypes.string.isRequired,\n        photoRoll: PropTypes.array,\n        background: PropTypes.string.isRequired\n    })\n}","import React, { Component } from 'react';\nimport PortfolioCard from './PortfolioCard';\nimport CardModal from './CardModal';\nimport projects from './projects.json';\nimport styles from '../../css/Portfolio.module.css';\n\nexport default class Portfolio extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            showModal: ''\n        }\n        this.projectMap = {}\n    }\n\n    componentDidMount() {\n        projects.forEach(project => this.projectMap[project.id] = project)\n    }\n\n    toggleModal = (projectId) => {\n        console.log(\"Doing projectId: \" + projectId)\n        if (!projectId) {\n            projectId = '';\n        }\n        this.setState((state) => ({\n            showModal: projectId\n        }));\n    }\n\n    render() {\n        console.log(this.state);\n        let projectCards = projects.map((project) =>\n            <PortfolioCard {...project}\n                           toggleFn={this.toggleModal.bind(this)}\n                           key={project.id}\n                           selected={project.id===this.state.showModal}>\n            </PortfolioCard>\n        )\n        return (\n            <div>\n                <div className={styles.portfolio}>{projectCards}</div>\n                { this.state.showModal ?\n                    <CardModal projectId={this.state.showModal}\n                    projectInfo={this.state.showModal ? this.projectMap[this.state.showModal] : null}\n                    onClose={this.toggleModal}/> :\n                    ''\n                }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport Portfolio from './portfolio/Portfolio';\n\nexport default class Projects extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div id=\"projects\" className=\"page-section\">\n                <h1>Projects</h1>\n                <Portfolio></Portfolio>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Resume extends Component {\n    render() {\n        return (\n            <div id=\"resume\" className=\"page-section\">\n                <h1>Resume &amp; CV</h1>\n                My astounding, awe-inspiring resume goes here.\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './css/App.css';\nimport 'typeface-roboto';\nimport NavBar from './components/navbar/NavBar';\nimport { BrowserRouter as Router, Route, withRouter } from 'react-router-dom';\nimport Home from './components/Home';\nimport Contact from './components/Contact';\nimport Projects from './components/Projects';\nimport Resume from './components/Resume';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <NavBar />\n          <Home />\n          <Projects />\n          <Resume />\n          <Contact />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport '@fortawesome/fontawesome-pro/css/fontawesome.min.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\nregisterServiceWorker();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"portfolio\":\"Portfolio_portfolio__2gNps\",\"portfolioCardContainer\":\"Portfolio_portfolioCardContainer__387Qc\",\"selected\":\"Portfolio_selected__306Ll\",\"portfolioCardHead\":\"Portfolio_portfolioCardHead__1-mH4\",\"portfolioCardCopy\":\"Portfolio_portfolioCardCopy__1b2z2\",\"portfolioCardTitle\":\"Portfolio_portfolioCardTitle__GBsi_\",\"portfolioCardDate\":\"Portfolio_portfolioCardDate__z2JFN\",\"modalBackdrop\":\"Portfolio_modalBackdrop__6eg7N\",\"visible\":\"Portfolio_visible__2wDrr\",\"modalBody\":\"Portfolio_modalBody__nZuMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"Navbar_navbarContainer__1A_0p\",\"navbarBranding\":\"Navbar_navbarBranding__3ShVG\",\"navbarTabList\":\"Navbar_navbarTabList__1tna7\",\"navbarTab\":\"Navbar_navbarTab__3Tqm9\",\"selected\":\"Navbar_selected__3vXOB\"};"],"sourceRoot":""}