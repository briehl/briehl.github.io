{"version":3,"sources":["css/Navbar.module.css","media/logo.svg","components/navbar/NavTabs.js","components/navbar/Branding.js","components/navbar/NavBar.js","components/Home.js","components/Contact.js","components/portfolio/PortfolioCard.js","components/portfolio/CardModal.js","components/portfolio/Portfolio.js","components/Projects.js","components/Resume.js","App.js","registerServiceWorker.js","index.js","css/Portfolio.module.css"],"names":["module","exports","NavTabs","props","className","styles","navbarTabList","children","Tab","tabButton","navbarTab","label","selected","to","target","Branding","navbarBranding","SocialLinks","socialLinks","href","targets","NavBar","state","opacity","window","addEventListener","this","handleScroll","bind","removeEventListener","e","scrollTop","scrollY","itemTranslate","Math","min","setState","location","pathname","navbarContainer","style","backgroundColor","marginLeft","React","Component","Home","Contact","PortfolioCard","zoomed","toggleFn","id","bgImage","bgImageStyle","background","backgroundRepeat","backgroundSize","portfolioCardContainer","onClick","toggleZoom","portfolioCardHead","portfolioCardTitle","name","portfolioCardCopy","blurb","CardModal","didMount","setTimeout","modalBg","projectInfo","visibleClass","visible","modalBackdrop","modalBody","projectId","onClose","Portfolio","toggleModal","console","log","showModal","projectMap","projects","forEach","project","projectCards","map","key","portfolio","Projects","Resume","RoutedNavBar","withRouter","App","paddingTop","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,eAAiB,+BAA+B,cAAgB,8BAA8B,UAAY,0BAA0B,SAAW,yBAAyB,YAAc,8B,w7CCD1PD,EAAOC,QAAU,IAA0B,kC,oKCKpC,SAASC,EAAQC,GACpB,OACI,yBAAKC,UAAWC,IAAOC,eAClBH,EAAMI,UAKZ,SAASC,EAAIL,GAChB,IAAIM,EAAY,yBAAKL,UAAWC,IAAOK,WAAYP,EAAMQ,OAQzD,OANIF,EADAN,EAAMS,SACM,yBAAKR,UAAWC,IAAOO,UAAWH,GAGlC,kBAAC,IAAD,CAAMI,GAAIV,EAAMW,QAASL,GCVtC,SAASM,IACZ,OACI,yBAAKX,UAAWC,IAAOW,gBAAvB,sBAMD,SAASC,IACZ,OACI,yBAAKb,UAAWC,IAAOa,aACnB,uBAAGC,KAAK,6BAA4B,0BAAMf,UAAU,yBACpD,uBAAGe,KAAK,uCAAsC,0BAAMf,UAAU,4BCf1E,IAAMgB,EACE,IADFA,EAEM,YAFNA,EAGI,UAHJA,EAIK,WAGUC,E,YACnB,WAAYlB,GAAQ,IAAD,8BACjB,4CAAMA,KAEDmB,MAAQ,CACXC,QAAS,GAJM,E,iFAQjBC,OAAOC,iBAAiB,SAAUC,KAAKC,aAAaC,KAAKF,S,6CAIzDF,OAAOK,oBAAoB,SAAUH,KAAKC,aAAaC,KAAKF,S,mCAGjDI,GACX,IACIC,EAAYP,OAAOQ,QACnBC,EAAgBC,KAAKC,IAAIJ,EAFX,IAEgC,IAElDL,KAAKU,UAAS,SAACd,GAAD,MAAY,CAAEC,QAASU,Q,+BAIrC,IAAMI,EAAWX,KAAKvB,MAAMkC,SAASC,SACrC,OACE,yBAAKlC,UAAWC,IAAOkC,gBAAiBC,MAAO,CAAEC,gBAAgB,eAAD,OAAiBf,KAAKJ,MAAMC,QAA5B,OAC9D,kBAACR,EAAD,MACA,yBAAKyB,MAAO,CAACE,WAAY,SACvB,kBAACxC,EAAD,KACE,kBAACM,EAAD,CAAKG,MAAM,OAAOG,OAAO,IAAIF,SAAUyB,IAAWjB,IAClD,kBAACZ,EAAD,CAAKG,MAAM,WAAWG,OAAO,YAAYF,SAAUyB,IAAWjB,IAC9D,kBAACZ,EAAD,CAAKG,MAAM,SAASG,OAAO,UAAUF,SAAUyB,IAAWjB,IAC1D,kBAACZ,EAAD,CAAKG,MAAM,UAAUG,OAAO,WAAWF,SAAUyB,IAAWjB,IAC5D,kBAACH,EAAD,a,GAnCwB0B,IAAMC,W,QCG3BC,G,uLAXX,OACE,yBAAKL,MAAO,CAAC,OAAU,UACrB,4BAAQpC,UAAU,cAChB,4DACA,iJ,GANSwC,cCDEE,E,iLAEjB,OACE,0F,GAH+BF,a,gBCEhBG,E,YACjB,WAAY5C,GAAQ,IAAD,8BACf,4CAAMA,KACDmB,MAAQ,CACT0B,QAAQ,GAHG,E,0EAQftB,KAAKU,UAAS,SAACd,GAAD,MAAY,CACtB0B,QAAS1B,EAAM0B,WAEnBtB,KAAKvB,MAAM8C,SAASvB,KAAKvB,MAAM+C,M,+BAI/B,IAAMC,EAAUzB,KAAKvB,MAAMgD,QAAmC,WAAazB,KAAKvB,MAAMgD,QAAU,KAC5FC,EAAe,GAuBnB,OAtBID,IACAC,EAAe,CACXC,WAAW,OAAD,OAASF,EAAT,KACVG,iBAAkB,YAClBC,eAAgB,UAmBpB,yBAAKnD,UAAS,UAAKC,IAAOmD,uBAAZ,YAAsC9B,KAAKvB,MAAMS,SAAWP,IAAOO,SAAW,IAAM6C,QAAS/B,KAAKgC,WAAW9B,KAAKF,OAC5H,yBAAKtB,UAAWC,IAAOsD,kBAAmBnB,MAAOY,GAC7C,yBAAKhD,UAAWC,IAAOuD,oBAAqBlC,KAAKvB,MAAM0D,OAE3D,yBAAKzD,UAAWC,IAAOyD,mBAAoBpC,KAAKvB,MAAM4D,Y,GA7C3BnB,aCAtBoB,E,YACjB,WAAY7D,GAAQ,IAAD,8BACf,4CAAMA,KACDmB,MAAQ,CACT2C,UAAU,GAHC,E,iFAOE,IAAD,OAChBC,YAAW,WACP,EAAK9B,UAAS,SAACd,GAAD,MAAY,CAAE2C,UAAU,QACvC,K,+BAGG,IAAD,OACDE,EAAU,GAEVzC,KAAKvB,MAAMiE,cACXD,EAAQ1B,gBAAkBf,KAAKvB,MAAMiE,YAAYf,YAGrD,IAAMgB,EAAe3C,KAAKJ,MAAM2C,SAAW5D,IAAOiE,QAAU,GAE5D,OACI,yBAAKlE,UAAS,UAAKC,IAAOkE,cAAZ,YAA6BF,GAAgB7B,MAAO2B,GAC9D,yBAAK/D,UAAWC,IAAOmE,WAClB9C,KAAKvB,MAAMI,SAEZ,sDAA4BmB,KAAKvB,MAAMsE,UAAvC,KACA,yBAAKrE,UAAU,UACX,4BAAQqD,QAAS,WAAQ,EAAKtD,MAAMuE,SAAQ,KAA5C,gB,GA9Be9B,a,QCElB+B,E,YACjB,WAAYxE,GAAQ,IAAD,8BACf,4CAAMA,KAWVyE,YAAc,SAACH,GACXI,QAAQC,IAAI,oBAAsBL,GAC7BA,IACDA,EAAY,IAEhB,EAAKrC,UAAS,SAACd,GAAD,MAAY,CACtByD,UAAWN,OAhBf,EAAKnD,MAAQ,CACTyD,UAAW,IAEf,EAAKC,WAAa,GALH,E,iFAQE,IAAD,OAChBC,EAASC,SAAQ,SAAAC,GAAO,OAAI,EAAKH,WAAWG,EAAQjC,IAAMiC,O,+BAapD,IAAD,OACLN,QAAQC,IAAIpD,KAAKJ,OACjB,IAAI8D,EAAeH,EAASI,KAAI,SAACF,GAAD,OAC5B,kBAAC,EAAD,iBAAmBA,EAAnB,CACelC,SAAU,EAAK2B,YAAYhD,KAAK,GAChC0D,IAAKH,EAAQjC,GACbtC,SAAUuE,EAAQjC,KAAK,EAAK5B,MAAMyD,gBAGrD,OACI,6BACI,yBAAK3E,UAAWC,IAAOkF,WAAYH,GACjC1D,KAAKJ,MAAMyD,UACT,kBAAC,EAAD,CAAWN,UAAW/C,KAAKJ,MAAMyD,UACjCX,YAAa1C,KAAKJ,MAAMyD,UAAYrD,KAAKsD,WAAWtD,KAAKJ,MAAMyD,WAAa,KAC5EL,QAAShD,KAAKkD,cACd,Q,GAvCmBhC,aCHlB4C,E,YACjB,WAAYrF,GAAQ,qEACVA,I,sEAIN,OACI,kBAAC,EAAD,U,GAP0ByC,aCDjB6C,E,iLAEb,OACI,mF,GAHwB7C,aCQ9B8C,EAAeC,aAAW,SAAAxF,GAAK,OAAI,kBAAC,EAAWA,MAmBtCyF,E,iLAfX,OACE,kBAAC,IAAD,KACE,yBAAKxF,UAAU,OACb,kBAACsF,EAAD,MACA,yBAAKlD,MAAO,CAACqD,WAAY,UACzB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnD,IACjC,kBAAC,IAAD,CAAOkD,KAAK,YAAYC,UAAWR,IACnC,kBAAC,IAAD,CAAOO,KAAK,UAAUC,UAAWP,IACjC,kBAAC,IAAD,CAAOM,KAAK,WAAWC,UAAWlD,U,GAV1BF,aCFZqD,EAAcC,QACW,cAA7B1E,OAAOa,SAAS8D,UAEe,UAA7B3E,OAAOa,SAAS8D,UAEhB3E,OAAOa,SAAS8D,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvF,QACfiF,UAAUC,cAAcQ,WAK1BnC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBmC,OAAM,SAAAC,GACLrC,QAAQqC,MAAM,4CAA6CA,MCxEjEC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,SDWb,WACb,GAA6C,kBAAmBf,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,GAAwBhG,OAAOa,UAC3CoF,SAAWjG,OAAOa,SAASoF,OAIvC,OAGFjG,OAAOC,iBAAiB,QAAQ,WAC9B,IAAM6E,EAAK,UAAMkB,GAAN,sBAEPvB,IAiDV,SAAiCK,GAE/BoB,MAAMpB,GACHI,MAAK,SAAAiB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CxB,UAAUC,cAAcwB,MAAMtB,MAAK,SAAAC,GACjCA,EAAasB,aAAavB,MAAK,WAC7BlF,OAAOa,SAAS6F,eAKpB7B,EAAgBC,MAGnBW,OAAM,WACLpC,QAAQC,IACN,oEArEAqD,CAAwB7B,GAIxBC,UAAUC,cAAcwB,MAAMtB,MAAK,WACjC7B,QAAQC,IACN,gHAMJuB,EAAgBC,OCrCxB8B,I,kBCVApI,EAAOC,QAAU,CAAC,UAAY,6BAA6B,uBAAyB,0CAA0C,SAAW,4BAA4B,kBAAoB,qCAAqC,kBAAoB,qCAAqC,mBAAqB,sCAAsC,cAAgB,iCAAiC,QAAU,2BAA2B,UAAY,gC","file":"static/js/main.09c6b9c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"Navbar_navbarContainer__2Ls4a\",\"navbarBranding\":\"Navbar_navbarBranding__3eFDT\",\"navbarTabList\":\"Navbar_navbarTabList__1_Zf3\",\"navbarTab\":\"Navbar_navbarTab__1yaol\",\"selected\":\"Navbar_selected__i8wW2\",\"socialLinks\":\"Navbar_socialLinks__1_5N9\"};","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport styles from '../../css/Navbar.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport function NavTabs(props) {\r\n    return (\r\n        <div className={styles.navbarTabList}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Tab(props) {\r\n    let tabButton = <div className={styles.navbarTab}>{props.label}</div>\r\n    if (props.selected) {\r\n        tabButton = <div className={styles.selected}>{tabButton}</div>\r\n    }\r\n    else {\r\n        tabButton = <Link to={props.target}>{tabButton}</Link>\r\n    }\r\n\r\n    return tabButton;\r\n}","import React from 'react';\r\nimport styles from '../../css/Navbar.module.css';\r\n\r\n/**\r\n * The left-side branding bit of the navbar. Should have my name, maybe a little icon,\r\n * something else professional, and flashy, yet subdued.\r\n *\r\n * Right now, just Digital Dissonance.\r\n */\r\nexport function Branding() {\r\n    return (\r\n        <div className={styles.navbarBranding}>\r\n            Digital Dissonance\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function SocialLinks() {\r\n    return (\r\n        <div className={styles.socialLinks}>\r\n            <a href=\"https://github.com/briehl\"><span className=\"fab fa-2x fa-github\"></span></a>\r\n            <a href=\"https://www.linkedin.com/in/briehl/\"><span className=\"fab fa-2x fa-linkedin\"></span></a>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport styles from '../../css/Navbar.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { NavTabs, Tab } from './NavTabs';\r\nimport { Branding, SocialLinks } from './Branding';\r\n\r\nconst targets = {\r\n  home: '/',\r\n  projects: '/projects',\r\n  resume: '/resume',\r\n  contact: '/contact'\r\n}\r\n\r\nexport default class NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      opacity: 0\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.handleScroll.bind(this))\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll.bind(this))\r\n  }\r\n\r\n  handleScroll(e) {\r\n    const maxScroll = 150\r\n    let scrollTop = window.scrollY,\r\n        itemTranslate = Math.min(scrollTop/maxScroll, 0.8)\r\n\r\n    this.setState((state) => ({ opacity: itemTranslate }))\r\n  }\r\n\r\n  render() {\r\n    const location = this.props.location.pathname\r\n    return (\r\n      <div className={styles.navbarContainer} style={{ backgroundColor: `rgba(0,0,0, ${this.state.opacity})` }}>\r\n        <Branding />\r\n        <div style={{marginLeft: \"auto\"}}>\r\n          <NavTabs>\r\n            <Tab label=\"Home\" target=\"/\" selected={location===targets.home} />\r\n            <Tab label=\"Projects\" target=\"/projects\" selected={location===targets.projects} />\r\n            <Tab label=\"Resume\" target=\"/resume\" selected={location===targets.resume} />\r\n            <Tab label=\"Contact\" target=\"/contact\" selected={location===targets.contact} />\r\n            <SocialLinks />\r\n          </NavTabs>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNavBar.propTypes = {\r\n  location: PropTypes.object\r\n}","import React, { Component } from 'react';\r\nimport logo from '../media/logo.svg';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{\"height\": \"150em\"}}>\r\n        <header className=\"App-header\">\r\n          <div>[ Splash screen goes here ]</div>\r\n          <div>This is a website. This is just the splash part. Stuff'll go here, like a picture. Then other things below</div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div>This is the about page. Or aboot, if you're Canadian.</div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styles from '../../css/Portfolio.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class PortfolioCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            zoomed: false\r\n        }\r\n   }\r\n\r\n    toggleZoom() {\r\n        this.setState((state) => ({\r\n            zoomed: !state.zoomed\r\n        }))\r\n        this.props.toggleFn(this.props.id);\r\n    }\r\n\r\n    render() {\r\n        const bgImage = this.props.bgImage ? process.env.PUBLIC_URL + '/images/' + this.props.bgImage : null;\r\n        let bgImageStyle = {};\r\n        if (bgImage) {\r\n            bgImageStyle = {\r\n                background: `url(${bgImage})`,\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundSize: 'cover'\r\n            }\r\n        }\r\n        // let bgImageLoc = null,\r\n        //     bgImage = null;\r\n        // if (this.props.projectInfo) {\r\n        //     bgImageLoc = process.env.PUBLIC_URL + '/images/' + this.props.projectInfo.background\r\n        //     bgImage = bgImageLoc\r\n        // }\r\n        // let modalBg = {};\r\n        // if (bgImage) {\r\n        //     modalBg = {\r\n        //         backgroundColor: `url(${bgImage})`,\r\n        //         // backgroundRepeat: 'no-repeat',\r\n        //         // backgroundSize: 'cover',\r\n        //         // opacity: 0.5\r\n        //     }\r\n        // }\r\n        return (\r\n            <div className={`${styles.portfolioCardContainer} ${this.props.selected ? styles.selected : ''}`} onClick={this.toggleZoom.bind(this)}>\r\n                <div className={styles.portfolioCardHead} style={bgImageStyle}>\r\n                    <div className={styles.portfolioCardTitle}>{this.props.name}</div>\r\n                </div>\r\n                <div className={styles.portfolioCardCopy}>{this.props.blurb}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPortfolioCard.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    startDate: PropTypes.string,\r\n    endDate: PropTypes.string,\r\n    url: PropTypes.string,\r\n    doi: PropTypes.string,\r\n    blurb: PropTypes.string.isRequired,\r\n    photoRoll: PropTypes.array,\r\n    background: PropTypes.string.isRequired,\r\n    bgImage: PropTypes.string.isRequired\r\n}","import React, { Component } from 'react';\r\nimport styles from '../../css/Portfolio.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class CardModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            didMount: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.setState((state) => ({ didMount: true }))\r\n        }, 0)\r\n    }\r\n\r\n    render() {\r\n        let modalBg = {\r\n        }\r\n        if (this.props.projectInfo) {\r\n            modalBg.backgroundColor = this.props.projectInfo.background;\r\n        }\r\n\r\n        const visibleClass = this.state.didMount ? styles.visible : '';\r\n\r\n        return (\r\n            <div className={`${styles.modalBackdrop} ${visibleClass}`} style={modalBg}>\r\n                <div className={styles.modalBody}>\r\n                    {this.props.children}\r\n\r\n                    <h2>I'm the card modal for {this.props.projectId}!</h2>\r\n                    <div className=\"footer\">\r\n                        <button onClick={() => { this.props.onClose(false) } }>\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCardModal.propTypes = {\r\n    projectId: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    projectInfo: PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        startDate: PropTypes.string,\r\n        endDate: PropTypes.string,\r\n        url: PropTypes.string,\r\n        doi: PropTypes.string,\r\n        blurb: PropTypes.string.isRequired,\r\n        photoRoll: PropTypes.array,\r\n        background: PropTypes.string.isRequired\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport PortfolioCard from './PortfolioCard';\r\nimport CardModal from './CardModal';\r\nimport projects from './projects.json';\r\nimport styles from '../../css/Portfolio.module.css';\r\n\r\nexport default class Portfolio extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showModal: ''\r\n        }\r\n        this.projectMap = {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        projects.forEach(project => this.projectMap[project.id] = project)\r\n    }\r\n\r\n    toggleModal = (projectId) => {\r\n        console.log(\"Doing projectId: \" + projectId)\r\n        if (!projectId) {\r\n            projectId = '';\r\n        }\r\n        this.setState((state) => ({\r\n            showModal: projectId\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        let projectCards = projects.map((project) =>\r\n            <PortfolioCard {...project}\r\n                           toggleFn={this.toggleModal.bind(this)}\r\n                           key={project.id}\r\n                           selected={project.id===this.state.showModal}>\r\n            </PortfolioCard>\r\n        )\r\n        return (\r\n            <div>\r\n                <div className={styles.portfolio}>{projectCards}</div>\r\n                { this.state.showModal ?\r\n                    <CardModal projectId={this.state.showModal}\r\n                    projectInfo={this.state.showModal ? this.projectMap[this.state.showModal] : null}\r\n                    onClose={this.toggleModal}/> :\r\n                    ''\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Portfolio from './portfolio/Portfolio';\r\n\r\nexport default class Projects extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Portfolio></Portfolio>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Resume extends Component {\r\n    render() {\r\n        return (\r\n            <div>My astounding, awe-inspiring resume goes here.</div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './css/App.css';\r\nimport 'typeface-roboto';\r\nimport NavBar from './components/navbar/NavBar';\r\nimport { BrowserRouter as Router, Route, withRouter } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Contact from './components/Contact';\r\nimport Projects from './components/Projects';\r\nimport Resume from './components/Resume';\r\n\r\nconst RoutedNavBar = withRouter(props => <NavBar {...props}/>);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <RoutedNavBar />\r\n          <div style={{paddingTop: \"5rem\"}}></div>\r\n          <Route exact path='/' component={Home} />\r\n          <Route path='/projects' component={Projects} />\r\n          <Route path='/resume' component={Resume} />\r\n          <Route path='/contact' component={Contact} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport '@fortawesome/fontawesome-pro/css/fontawesome.min.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\nregisterServiceWorker();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"portfolio\":\"Portfolio_portfolio__Zu-ug\",\"portfolioCardContainer\":\"Portfolio_portfolioCardContainer__17ZU5\",\"selected\":\"Portfolio_selected__sNm5V\",\"portfolioCardHead\":\"Portfolio_portfolioCardHead__3Dj80\",\"portfolioCardCopy\":\"Portfolio_portfolioCardCopy__1Ed99\",\"portfolioCardTitle\":\"Portfolio_portfolioCardTitle__37UqJ\",\"modalBackdrop\":\"Portfolio_modalBackdrop__3Oa1E\",\"visible\":\"Portfolio_visible__3nQtr\",\"modalBody\":\"Portfolio_modalBody__2wUPQ\"};"],"sourceRoot":""}